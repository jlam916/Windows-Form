<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        nv4LQexj2eP6BCoAAAAASUVORK5CYII=
</value>
  </data>
</root>